package recursion;

public class Main{

	public static void main(String[]args) {

		int a = f(7);
		System.out.print("a: " + a);

		int g = S(7);
		System.out.print(" g: " + g);

		int l = Z(7);
		System.out.print(" l: " + l);
		
		int v = ex4(18);
		System.out.print(" v: " + v);
		
		int p = ex5(18,6);
		System.out.print(" p: " + p);

                int k = ex6(20,9);
		System.out.print(" k: " + k);

		int d = ex7(7,14);
		System.out.print(" d: " + d);
		
		int r = ex9(11);
		System.out.print(" r: " + r);
		
	}

	public static int f(int n) {
		if(n == 0) {
			return 1;
		}
		return n * f(n - 1);
	}

	public static int S(int m) {
		if(m == 0) {
			return 0;
		}
		return m + S(m - 1);
	}

	public static int Z(int x) {
		if(x == 1) {
			return 1;
		}
		if(x % 2 != 0) {
			return x * Z(x - 2);
		} else {
			return Z(x - 1);
		}
	}


	public static int ex4(int c) {
		if(c < 10) {
			return 1;
		}
		return 1 + ex4(c / 10);
	}
 
 public static int ex5(int dividend, int divisor) {
    if (dividend < divisor) {
        return 0;
    }
    return 1 + ex6(dividend - divisor, divisor);
}

public static int ex6(int dividend, int divisor) {
    if (dividend < divisor) {
        return dividend;
    }
    return ex6(dividend - divisor, divisor);
}

public static boolean ex7 (int x, int y) {
		if (y == 0) {
            return false; // אין מספר שהוא כפולה של 0
        }
		if (x == y) {
            return true;
        }
		if (x < y) {
            return false;
        }
		return ex7(x - y, y);
}

public static boolean ex9(int number) {
	 if (number < 10) {
	        return true;
	    }
	    int lastDigit = number % 10;
	    int secondLastDigit = (number / 10) % 10;
	    if ((lastDigit % 2) != (secondLastDigit % 2)) {
	        return false;
	    }
	    return ex9 (number / 10);
	}
	
	}
	
